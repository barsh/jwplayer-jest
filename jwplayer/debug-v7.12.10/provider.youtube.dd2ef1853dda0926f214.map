{"version":3,"sources":["webpack:///./src/js/providers/youtube.js"],"names":["utils","cssUtils","_","events","states","Scriptloader","DefaultProvider","Events","_scriptLoader","window","location","protocol","_isMobile","isMobile","YoutubeProvider","_playerId","_playerConfig","state","IDLE","extend","_this","_youtubeAPI","YT","_youtubePlayer","_element","document","createElement","_container","_bufferPercent","_listeningForReady","_youtubeEmbedReadyCallback","_youtubePlayerReadyCallback","_playingInterval","_youtubeState","_requiresUserInteraction","setState","clearInterval","COMPLETE","setInterval","_checkPlaybackHandler","PLAYING","seeking","LOADING","STALLED","_bufferUpdate","apply","arguments","getStatus","loaderstatus","NEW","on","_onLoadSuccess","ERROR","_onLoadError","load","id","loaded","_readyCheck","setTimeout","off","_getVideoLayer","videoLayer","parentNode","jwplayer","onReady","getPlayerState","youtubeState","undefined","_onYoutubeStateChange","data","youtubeStates","PlayerState","_timeUpdateHandler","BUFFERING","_round","number","Math","round","trigger","JWPLAYER_MEDIA_TIME","position","getCurrentTime","duration","getDuration","bufferPercent","getVideoLoadedFraction","JWPLAYER_MEDIA_BUFFER","_ended","JWPLAYER_MEDIA_COMPLETE","_sendMetaEvent","JWPLAYER_MEDIA_META","width","clientWidth","height","clientHeight","_composeCallbacks","args","start","length","i","result","call","_embedYoutubePlayer","videoId","playerVars","Error","ytConfig","html5","autoplay","controls","showinfo","rel","modestbranding","playsinline","origin","hostname","_onYoutubePlayerReady","onStateChange","onPlaybackQualityChange","_onYoutubePlaybackQualityChange","onError","_onYoutubePlayerError","setVisibility","Player","getIframe","event","UNSTARTED","isAndroid","playVideo","ENDED","isFunction","unloadModule","JWPLAYER_MEDIA_LEVELS","levels","getQualityLevels","currentQuality","getCurrentQuality","PAUSED","CUED","play","JWPLAYER_MEDIA_LEVEL_CHANGED","JWPLAYER_MEDIA_ERROR","message","_readyViewForMobile","_stopVideo","stopVideo","tryCatch","clearVideo","init","item","_setItem","destroy","remove","url","sources","file","youTubeID","volume","mute","onStart","videoData","getVideoData","currentVideoId","video_id","cueVideoById","loadVideoById","seekTo","stop","pause","pauseVideo","seek","vol","isNumber","min","max","getVolume","setVolume","muted","exists","unMute","setContainer","parent","appendChild","getContainer","removeChild","style","display","visibility","opacity","resize","getAvailableQualityLevels","ytQuality","getPlaybackQuality","ytLevels","indexOf","contains","label","without","qualityArray","map","val","reverse","setCurrentQuality","quality","setPlaybackQuality","getName","name","register","api","registerProvider"],"mappings":"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","file":"provider.youtube.js","sourcesContent":["define([\r\n    'utils/helpers',\r\n    'utils/css',\r\n    'utils/underscore',\r\n    'events/events',\r\n    'events/states',\r\n    'utils/scriptloader',\r\n    'providers/default',\r\n    'utils/backbone.events'\r\n], function(utils, cssUtils, _, events, states, Scriptloader, DefaultProvider, Events) {\r\n    var _scriptLoader = new Scriptloader(window.location.protocol + '//www.youtube.com/iframe_api');\r\n    var _isMobile = utils.isMobile();\r\n\r\n    function YoutubeProvider(_playerId, _playerConfig) {\r\n        this.state = states.IDLE;\r\n\r\n        _.extend(this, Events);\r\n\r\n        var _this = this;\r\n        var _youtubeAPI = window.YT;\r\n        var _youtubePlayer = null;\r\n        var _element = document.createElement('div');\r\n        var _container;\r\n        var _bufferPercent = -1;\r\n        var _listeningForReady = false;\r\n        var _youtubeEmbedReadyCallback = null;\r\n        var _youtubePlayerReadyCallback = null;\r\n        var _playingInterval = -1;\r\n        var _youtubeState = -1;\r\n        var _requiresUserInteraction = _isMobile;\r\n\r\n        this.setState = function(state) {\r\n            clearInterval(_playingInterval);\r\n            if (state !== states.IDLE && state !== states.COMPLETE) {\r\n                // always run this interval when not idle because we can't trust events from iFrame\r\n                _playingInterval = setInterval(_checkPlaybackHandler, 250);\r\n                if (state === states.PLAYING) {\r\n                    this.seeking = false;\r\n                } else if (state === states.LOADING || state === states.STALLED) {\r\n                    _bufferUpdate();\r\n                }\r\n            }\r\n\r\n            DefaultProvider.setState.apply(this, arguments);\r\n        };\r\n\r\n        // Load iFrame API\r\n        if (!_youtubeAPI && _scriptLoader && _scriptLoader.getStatus() === Scriptloader.loaderstatus.NEW) {\r\n            _scriptLoader.on(events.COMPLETE, _onLoadSuccess);\r\n            _scriptLoader.on(events.ERROR, _onLoadError);\r\n            _scriptLoader.load();\r\n        }\r\n\r\n        // setup container\r\n        _element.id = _playerId + '_youtube';\r\n\r\n        function _onLoadSuccess() {\r\n            if (window.YT && window.YT.loaded) {\r\n                _youtubeAPI = window.YT;\r\n                _readyCheck();\r\n            } else {\r\n                // poll until Yo API is loaded\r\n                setTimeout(_onLoadSuccess, 100);\r\n            }\r\n        }\r\n\r\n        function _onLoadError() {\r\n            if (_scriptLoader) {\r\n                _scriptLoader.off();\r\n                _scriptLoader = null;\r\n                // console.log('Error loading Youtube iFrame API: %o', event);\r\n                // TODO: dispatch video error\r\n            }\r\n        }\r\n\r\n        function _getVideoLayer() {\r\n            var videoLayer = _element && _element.parentNode;\r\n            if (!videoLayer) {\r\n                // if jwplayer DOM is not ready, do Youtube embed on jwplayer ready\r\n                if (!_listeningForReady) {\r\n                    window.jwplayer(_playerId).onReady(_readyCheck);\r\n                    _listeningForReady = true;\r\n                }\r\n                return false;\r\n            }\r\n            return videoLayer;\r\n        }\r\n\r\n        function _readyCheck() {\r\n            if (_youtubeAPI && _getVideoLayer()) {\r\n                // if setItem cued up a video, this callback will handle it now\r\n                if (_youtubeEmbedReadyCallback) {\r\n                    _youtubeEmbedReadyCallback.apply(_this);\r\n                }\r\n            }\r\n        }\r\n\r\n        function _checkPlaybackHandler() {\r\n            // return if player is not initialized and ready\r\n            if (!_youtubePlayer || !_youtubePlayer.getPlayerState) {\r\n                return;\r\n            }\r\n            // manually check for state changes since API fails to do so\r\n            var youtubeState = _youtubePlayer.getPlayerState();\r\n            if (youtubeState !== null &&\r\n                youtubeState !== undefined &&\r\n                youtubeState !== _youtubeState) {\r\n                _onYoutubeStateChange({\r\n                    data: youtubeState\r\n                });\r\n            }\r\n            // handle time and buffer updates\r\n            var youtubeStates = _youtubeAPI.PlayerState;\r\n            if (youtubeState === youtubeStates.PLAYING) {\r\n                _timeUpdateHandler();\r\n            } else if (youtubeState === youtubeStates.BUFFERING) {\r\n                _bufferUpdate();\r\n            }\r\n        }\r\n\r\n\r\n        function _round(number) {\r\n            return Math.round(number * 10) / 10;\r\n        }\r\n        function _timeUpdateHandler() {\r\n            _bufferUpdate();\r\n            _this.trigger(events.JWPLAYER_MEDIA_TIME, {\r\n                position: _round(_youtubePlayer.getCurrentTime()),\r\n                duration: _youtubePlayer.getDuration()\r\n            });\r\n        }\r\n\r\n        function _bufferUpdate() {\r\n            var bufferPercent = 0;\r\n            if (_youtubePlayer && _youtubePlayer.getVideoLoadedFraction) {\r\n                bufferPercent = Math.round(_youtubePlayer.getVideoLoadedFraction() * 100);\r\n            }\r\n            if (_bufferPercent !== bufferPercent) {\r\n                _bufferPercent = bufferPercent;\r\n                _this.trigger(events.JWPLAYER_MEDIA_BUFFER, {\r\n                    bufferPercent: bufferPercent\r\n                });\r\n                // if (bufferPercent === 100) this.trigger(events.JWPLAYER_MEDIA_BUFFER_FULL);\r\n            }\r\n        }\r\n\r\n        function _ended() {\r\n            if (_this.state !== states.IDLE && _this.state !== states.COMPLETE) {\r\n                _this.trigger(events.JWPLAYER_MEDIA_COMPLETE);\r\n            }\r\n        }\r\n\r\n        function _sendMetaEvent() {\r\n            _this.trigger(events.JWPLAYER_MEDIA_META, {\r\n                duration: _youtubePlayer.getDuration(),\r\n                width: _element.clientWidth,\r\n                height: _element.clientHeight\r\n            });\r\n        }\r\n\r\n        // Returns a function that is the composition of a list of functions, each\r\n        // consuming the return value of the function that follows.\r\n        function _composeCallbacks() {\r\n            var args = arguments;\r\n            var start = args.length - 1;\r\n            return function() {\r\n                var i = start;\r\n                var result = args[start].apply(this, arguments);\r\n                while (i--) {\r\n                    result = args[i].call(this, result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n\r\n        function _embedYoutubePlayer(videoId, playerVars) {\r\n            if (!videoId) {\r\n                throw new Error('invalid Youtube ID');\r\n            }\r\n\r\n            var videoLayer = _element.parentNode;\r\n            if (!videoLayer) {\r\n                // setContainer() hasn't been run yet\r\n                return;\r\n            }\r\n\r\n            var ytConfig = {\r\n                height: '100%',\r\n                width: '100%',\r\n                videoId: videoId,\r\n                playerVars: _.extend({\r\n                    html5: 1,\r\n                    autoplay: 0,\r\n                    controls: 0,\r\n                    showinfo: 0,\r\n                    rel: 0,\r\n                    modestbranding: 0,\r\n                    playsinline: 1,\r\n                    origin: location.protocol + '//' + location.hostname\r\n                }, playerVars),\r\n                events: {\r\n                    onReady: _onYoutubePlayerReady,\r\n                    onStateChange: _onYoutubeStateChange,\r\n                    onPlaybackQualityChange: _onYoutubePlaybackQualityChange,\r\n                    // onPlaybackRateChange: _onYoutubePlaybackRateChange,\r\n                    onError: _onYoutubePlayerError\r\n                }\r\n            };\r\n\r\n            // iFrame must be visible or it will not set up properly\r\n            _this.setVisibility(true);\r\n\r\n            _youtubePlayer = new _youtubeAPI.Player(_element, ytConfig);\r\n            _element = _youtubePlayer.getIframe();\r\n\r\n            _youtubeEmbedReadyCallback = null;\r\n        }\r\n\r\n        // Youtube Player Event Handlers\r\n        function _onYoutubePlayerReady() {\r\n            // If setItem was called before the player was ready, update the player now\r\n            if (_youtubePlayerReadyCallback) {\r\n                _youtubePlayerReadyCallback.apply(_this);\r\n                _youtubePlayerReadyCallback = null;\r\n            }\r\n        }\r\n\r\n        function _onYoutubeStateChange(event) {\r\n            var youtubeStates = _youtubeAPI.PlayerState;\r\n            _youtubeState = event.data;\r\n\r\n            switch (_youtubeState) {\r\n                case youtubeStates.UNSTARTED: // -1: //unstarted\r\n                    // play video on android to avoid being stuck in this state\r\n                    if (utils.isAndroid()) {\r\n                        _youtubePlayer.playVideo();\r\n                    }\r\n                    return;\r\n\r\n                case youtubeStates.ENDED: // 0: //ended (idle after playback)\r\n                    _ended();\r\n                    return;\r\n\r\n                case youtubeStates.PLAYING: // 1: playing\r\n                    // prevent duplicate captions when using JW Player captions and YT video has yt:cc=on\r\n                    if (_.isFunction(_youtubePlayer.unloadModule)) {\r\n                        _youtubePlayer.unloadModule('captions');\r\n                    }\r\n\r\n                    // playback has started so stop blocking api.play()\r\n                    _requiresUserInteraction = false;\r\n\r\n                    // sent meta size and duration\r\n                    _sendMetaEvent();\r\n\r\n                    // send levels when playback starts\r\n                    _this.trigger(events.JWPLAYER_MEDIA_LEVELS, {\r\n                        levels: _this.getQualityLevels(),\r\n                        currentQuality: _this.getCurrentQuality()\r\n                    });\r\n\r\n                    _this.setState(states.PLAYING);\r\n                    return;\r\n\r\n                case youtubeStates.PAUSED: // 2: //paused\r\n                    _this.setState(states.PAUSED);\r\n                    return;\r\n\r\n                case youtubeStates.BUFFERING: // 3: //buffering\r\n                    if (_this.seeking) {\r\n                        _this.setState(states.LOADING);\r\n                    } else {\r\n                        _this.setState(states.STALLED);\r\n                    }\r\n                    return;\r\n\r\n                case youtubeStates.CUED: // 5: //video cued (idle before playback)\r\n                    _this.setState(states.IDLE);\r\n                    // play video on android to avoid being stuck in this state\r\n                    if (utils.isAndroid()) {\r\n                        _youtubePlayer.playVideo();\r\n                    }\r\n                    return;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function _onYoutubePlaybackQualityChange() {\r\n            // This event is where the Youtube player and media is actually ready and can be played\r\n            // Make sure playback starts/resumes\r\n            if (_youtubeState !== _youtubeAPI.PlayerState.ENDED) {\r\n                _this.play();\r\n            }\r\n\r\n            _this.trigger(events.JWPLAYER_MEDIA_LEVEL_CHANGED, {\r\n                currentQuality: _this.getCurrentQuality(),\r\n                levels: _this.getQualityLevels()\r\n            });\r\n        }\r\n\r\n        function _onYoutubePlayerError() {\r\n            _this.trigger(events.JWPLAYER_MEDIA_ERROR, {\r\n                message: 'Error loading YouTube: Video could not be played'\r\n            });\r\n        }\r\n\r\n        function _readyViewForMobile() {\r\n            if (_isMobile) {\r\n                _this.setVisibility(true);\r\n            }\r\n        }\r\n        // Internal operations\r\n\r\n        function _stopVideo() {\r\n            clearInterval(_playingInterval);\r\n            if (_youtubePlayer && _youtubePlayer.stopVideo) {\r\n                utils.tryCatch(function() {\r\n                    _youtubePlayer.stopVideo();\r\n                    _youtubePlayer.clearVideo();\r\n                });\r\n            }\r\n        }\r\n        // Additional Provider Methods (not yet implemented in html5.video)\r\n\r\n        this.init = function(item) {\r\n            // For now, we want each youtube provider to delete and start from scratch\r\n            // this.destroy();\r\n\r\n            // load item on embed for mobile touch to start\r\n            _setItem(item);\r\n        };\r\n\r\n        this.destroy = function() {\r\n            this.remove();\r\n            this.off();\r\n\r\n            _container =\r\n                _element =\r\n                _youtubeAPI =\r\n                _this = null;\r\n        };\r\n\r\n\r\n        // Video Provider API\r\n        this.load = function(item) {\r\n            this.setState(states.LOADING);\r\n\r\n            _setItem(item);\r\n            // start playback if api is ready\r\n            _this.play();\r\n        };\r\n\r\n        function _setItem(item) {\r\n            _youtubePlayerReadyCallback = null;\r\n            var url = item.sources[0].file;\r\n            var videoId = utils.youTubeID(url);\r\n\r\n            _this.volume(_playerConfig.volume);\r\n            _this.mute(_playerConfig.mute);\r\n            _this.setVisibility(true);\r\n\r\n            if (!_youtubeAPI || !_youtubePlayer) {\r\n                // wait for API to be present and jwplayer DOM to be instantiated\r\n                _youtubeEmbedReadyCallback = function() {\r\n                    _embedYoutubePlayer(videoId);\r\n                };\r\n                // make sure _youtubeAPI is set before running readyCheck\r\n                _onLoadSuccess();\r\n                return;\r\n            }\r\n\r\n            if (!_youtubePlayer.getPlayerState) {\r\n                var onStart = function() {\r\n                    _this.load(item);\r\n                };\r\n                if (_youtubePlayerReadyCallback) {\r\n                    _youtubePlayerReadyCallback = _composeCallbacks(onStart, _youtubePlayerReadyCallback);\r\n                } else {\r\n                    _youtubePlayerReadyCallback = onStart;\r\n                }\r\n                return;\r\n            }\r\n\r\n            var videoData = _youtubePlayer.getVideoData();\r\n            var currentVideoId = videoData && videoData.video_id;\r\n\r\n            if (currentVideoId !== videoId) {\r\n                // An exception is thrown by the iframe_api - but the call works\r\n                // it's trying to access an element of the controls which is not present\r\n                // because we disabled control in the setup\r\n                if (_requiresUserInteraction) {\r\n                    _stopVideo();\r\n                    _youtubePlayer.cueVideoById(videoId);\r\n                } else {\r\n                    _youtubePlayer.loadVideoById(videoId);\r\n                }\r\n\r\n                // if player is unstarted, ready for mobile\r\n                var youtubeState = _youtubePlayer.getPlayerState();\r\n                var youtubeStates = _youtubeAPI.PlayerState;\r\n                if (youtubeState === youtubeStates.UNSTARTED || youtubeState === youtubeStates.CUED) {\r\n                    _readyViewForMobile();\r\n                }\r\n            } else {\r\n                // replay current video\r\n                if (_youtubePlayer.getCurrentTime() > 0) {\r\n                    _youtubePlayer.seekTo(0);\r\n                }\r\n                _sendMetaEvent();\r\n            }\r\n        }\r\n\r\n\r\n        this.stop = function() {\r\n            _stopVideo();\r\n            this.setState(states.IDLE);\r\n        };\r\n\r\n        this.play = function() {\r\n            if (_requiresUserInteraction) {\r\n                return;\r\n            }\r\n            if (_youtubePlayer && _youtubePlayer.playVideo) {\r\n                _youtubePlayer.playVideo();\r\n            } else if (_youtubePlayerReadyCallback) {\r\n                // If the _youtubePlayer isn't setup, then play when we're ready\r\n                _youtubePlayerReadyCallback = _composeCallbacks(this.play, _youtubePlayerReadyCallback);\r\n            } else {\r\n                _youtubePlayerReadyCallback = this.play;\r\n            }\r\n        };\r\n\r\n        this.pause = function() {\r\n            if (_requiresUserInteraction) {\r\n                return;\r\n            }\r\n            if (_youtubePlayer.pauseVideo) {\r\n                _youtubePlayer.pauseVideo();\r\n            }\r\n        };\r\n\r\n        this.seek = function(position) {\r\n            if (_requiresUserInteraction) {\r\n                return;\r\n            }\r\n            if (_youtubePlayer.seekTo) {\r\n                this.seeking = true;\r\n                _youtubePlayer.seekTo(position);\r\n            }\r\n        };\r\n\r\n        this.volume = function(vol) {\r\n            if (!_.isNumber(vol)) {\r\n                return;\r\n            }\r\n            var volume = Math.min(Math.max(0, vol), 100);\r\n            if (_youtubePlayer && _youtubePlayer.getVolume) {\r\n                _youtubePlayer.setVolume(volume);\r\n            }\r\n\r\n        };\r\n\r\n        this.mute = function(mute) {\r\n            var muted = utils.exists(mute) ? !!mute : !_playerConfig.mute;\r\n            if (_youtubePlayer && _youtubePlayer.mute) {\r\n                if (muted) {\r\n                    _youtubePlayer.mute();\r\n                } else {\r\n                    _youtubePlayer.unMute();\r\n                }\r\n            }\r\n        };\r\n\r\n        this.setContainer = function(parent) {\r\n            _container = parent;\r\n            parent.appendChild(_element);\r\n            this.setVisibility(true);\r\n        };\r\n\r\n        this.getContainer = function() {\r\n            return _container;\r\n        };\r\n\r\n        this.remove = function() {\r\n            _stopVideo();\r\n\r\n            // remove element\r\n            if (_element && _container && _container === _element.parentNode) {\r\n                _container.removeChild(_element);\r\n            }\r\n\r\n            _youtubeEmbedReadyCallback =\r\n                _youtubePlayerReadyCallback =\r\n                    _youtubePlayer = null;\r\n        };\r\n\r\n        this.setVisibility = function(state) {\r\n            state = !!state;\r\n            if (state) {\r\n                // show\r\n                cssUtils.style(_element, {\r\n                    display: 'block'\r\n                });\r\n                cssUtils.style(_container, {\r\n                    visibility: 'visible',\r\n                    opacity: 1\r\n                });\r\n            } else if (!_isMobile) {\r\n                // hide\r\n                cssUtils.style(_container, {\r\n                    opacity: 0\r\n                });\r\n            }\r\n        };\r\n\r\n        this.resize = function() {\r\n            return false;\r\n        };\r\n\r\n        this.getCurrentQuality = function() {\r\n            if (!_youtubePlayer) {\r\n                return -1;\r\n            }\r\n            if (_youtubePlayer.getAvailableQualityLevels) {\r\n                var ytQuality = _youtubePlayer.getPlaybackQuality();\r\n                var ytLevels = _youtubePlayer.getAvailableQualityLevels();\r\n                return ytLevels.indexOf(ytQuality);\r\n            }\r\n            return -1;\r\n        };\r\n\r\n        this.getQualityLevels = function() {\r\n            if (!_youtubePlayer) {\r\n                return;\r\n            }\r\n\r\n            if (!_.isFunction(_youtubePlayer.getAvailableQualityLevels)) {\r\n                return [];\r\n            }\r\n\r\n            var ytLevels = _youtubePlayer.getAvailableQualityLevels();\r\n\r\n            // If the result is ['auto', 'low'], we prefer to return ['low']\r\n            if (ytLevels.length === 2 && _.contains(ytLevels, 'auto')) {\r\n                return {\r\n                    label: _.without(ytLevels, 'auto')\r\n                };\r\n            }\r\n\r\n            var qualityArray = _.map(ytLevels, function(val) {\r\n                return {\r\n                    label: val\r\n                };\r\n            });\r\n\r\n            // We expect them in decreasing order\r\n            return qualityArray.reverse();\r\n        };\r\n\r\n        this.setCurrentQuality = function(quality) {\r\n            if (!_youtubePlayer) {\r\n                return;\r\n            }\r\n            if (_youtubePlayer.getAvailableQualityLevels) {\r\n                var ytLevels = _youtubePlayer.getAvailableQualityLevels();\r\n                if (ytLevels.length) {\r\n                    var ytQuality = ytLevels[ytLevels.length - quality - 1];\r\n                    _youtubePlayer.setPlaybackQuality(ytQuality);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.getName = YoutubeProvider.getName;\r\n    }\r\n\r\n    YoutubeProvider.getName = function() {\r\n        return { name: 'youtube' };\r\n    };\r\n\r\n    YoutubeProvider.register = function(jwplayer) {\r\n        jwplayer.api.registerProvider(YoutubeProvider);\r\n    };\r\n\r\n    return YoutubeProvider;\r\n\r\n});\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/js/providers/youtube.js\n **/"],"sourceRoot":""}